{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shua\\\\python-blockchain\\\\frontend\\\\src\\\\components\\\\Blockchain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAGE_RANGE = 3;\n\nfunction Blockchain() {\n  _s();\n\n  const [blockchain, setBlockchain] = useState([]);\n  const [blockchainLength, setBlockchainLength] = useState(0);\n\n  const fetchBlockchainPage = ({\n    start,\n    end\n  }) => {\n    fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end${end}`);\n  };\n\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/blockchain`).then(response => response.json()).then(json => setBlockchain(json));\n    fetch(`${API_BASE_URL}/blockchain/length`).then(response => response.json()).then(json => setBlockchainLength(json));\n  }, []);\n  const buttonNumbers = [];\n\n  for (let i = 0; i < blockchainLength / PAGE_RANGE; i++) {\n    buttonNumbers.push(i);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Blockchain\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Blockchain\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: blockchain.map(block => /*#__PURE__*/_jsxDEV(Block, {\n        block: block\n      }, block.hash, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttonNumbers.map(number => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            size: \"sm\",\n            variant: \"danger\",\n            children: number + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this), ' ']\n        }, number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Blockchain, \"ET2+PUQHmx3KahRnTTeJfgLipx4=\");\n\n_c = Blockchain;\nexport default Blockchain;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blockchain\");","map":{"version":3,"sources":["C:/Users/Shua/python-blockchain/frontend/src/components/Blockchain.js"],"names":["React","useState","useEffect","Button","API_BASE_URL","Block","PAGE_RANGE","Blockchain","blockchain","setBlockchain","blockchainLength","setBlockchainLength","fetchBlockchainPage","start","end","fetch","then","response","json","buttonNumbers","i","push","map","block","hash","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,UAAU,GAAG,CAAnB;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAC,CAAD,CAAxD;;AAEA,QAAMW,mBAAmB,GAAG,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,KAAoB;AAC5CC,IAAAA,KAAK,CAAE,GAAEX,YAAa,2BAA0BS,KAAM,OAAMC,GAAI,EAA3D,CAAL;AACH,GAFD;;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,KAAK,CAAE,GAAEX,YAAa,aAAjB,CAAL,CACCY,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIT,aAAa,CAACS,IAAD,CAF3B;AAIAH,IAAAA,KAAK,CAAE,GAAEX,YAAa,oBAAjB,CAAL,CACCY,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEME,IAAI,IAAIP,mBAAmB,CAACO,IAAD,CAFjC;AAGH,GARQ,EAQN,EARM,CAAT;AAUA,QAAMC,aAAa,GAAG,EAAtB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,gBAAgB,GAAGJ,UAAvC,EAAmDc,CAAC,EAApD,EAAuD;AACnDD,IAAAA,aAAa,CAACE,IAAd,CAAmBD,CAAnB;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAEQZ,UAAU,CAACc,GAAX,CAAeC,KAAK,iBAAI,QAAC,KAAD;AAA0B,QAAA,KAAK,EAAIA;AAAnC,SAAcA,KAAK,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA,cAAxB;AAFR;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAA,gBAEQL,aAAa,CAACG,GAAd,CAAkBG,MAAM,IAAI;AACxB,4BACI;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAG,IAAf;AAAoB,YAAA,OAAO,EAAG,QAA9B;AAAA,sBACKA,MAAM,GAAG;AADd;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGc,GAHd;AAAA,WAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD;AAFR;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA9CQlB,U;;KAAAA,U;AAgDT,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { API_BASE_URL } from '../config';\r\nimport Block from './Block';\r\n\r\nconst PAGE_RANGE = 3;\r\n\r\nfunction Blockchain() {\r\n    const [blockchain, setBlockchain] = useState([]);\r\n    const [blockchainLength, setBlockchainLength] = useState(0);\r\n\r\n    const fetchBlockchainPage = ({ start, end }) => {\r\n        fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end${end}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetch(`${API_BASE_URL}/blockchain`)\r\n        .then(response => response.json())\r\n        .then(json => setBlockchain(json))\r\n\r\n        fetch(`${API_BASE_URL}/blockchain/length`)\r\n        .then(response => response.json())\r\n        .then(json => setBlockchainLength(json))\r\n    }, []);\r\n\r\n    const buttonNumbers = [];\r\n    for (let i = 0; i < blockchainLength / PAGE_RANGE; i++){\r\n        buttonNumbers.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className = \"Blockchain\">\r\n            <h3>Blockchain</h3>\r\n            <div>\r\n                {\r\n                    blockchain.map(block => <Block key = {block.hash} block = {block} />)\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    buttonNumbers.map(number => {\r\n                        return (\r\n                            <span key = {number}>\r\n                                <Button size = \"sm\" variant = \"danger\">\r\n                                    {number + 1}\r\n                                </Button>{' '}\r\n                            </span>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blockchain"]},"metadata":{},"sourceType":"module"}